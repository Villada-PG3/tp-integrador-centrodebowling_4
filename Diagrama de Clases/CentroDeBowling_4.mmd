classDiagram
    direction TB


    
    class ClienteManager {
    <<Handler>>
        +create_user()
        +create_superuser()
    }

     class TablaView {
        <<interfaz>>
    
    
        +get_context_data()
        +get_partida()
        +get_jugadores()
        +get_Tiradas()
        +get_turnos()
        +get_turno_actual()
        +post()
        +registrar_tirada()
        +termino_la_partida()
        +finalizar_partida()
    }


    class Cliente {
        +id_cliente: AutoField
        +email: EmailField
        +nombre: CharField
        +direccion: CharField
        +telefono: CharField
        +password: CharField
        +is_staff: BooleanField
        +is_active: BooleanField
        +is_superuser: BooleanField
        
    }


    class Pedido {
        +id_pedido: AutoField
        +estado: ForeignKey
        +fecha_hora_pedido: DateField
        +id_reserva: ForeignKey
        +total_a_pagar: property
        +crear_pedido()
    }   

    class PistaBowling {
        +id_pista: AutoField
        +capacidad_maxima: IntegerField
        +descripcion: CharField
        +estado: ForeignKey
    }

    class Reserva {
        +id_reserva: AutoField
        +id_cliente: ForeignKey
        +id_pista: ForeignKey
        +fecha_hora_reserva: DateTimeField
        +fecha_hora_fin: TimeField
        +save()
        +crear_historial_estado_inicial()
        +procesar_reserva()
        +actualizar_ultimo_estado()
        +verificar_confirmacion()
        +verificar_estado_actual()
        +verificar_finalizacion()
        +actualizar_fecha_hora_fin()
        +crear_historial_estado()
        +finalizar()
        +estado_actual: property
    }

    class HistorialEstado {
        +id_reserva: ForeignKey
        +estado: ForeignKey
        +fecha_hora_inicio: DateTimeField
        +fecha_hora_fin: DateTimeField
    }

    class EstadoReserva {
        +estado: CharField
        +descripcion: CharField
    }

    class Jugador {
        +id_jugador: AutoField
        +id_partida: ForeignKey
        +nombre_jugador: CharField
        +orden: IntegerField
        +puntaje_total: property
    }

    class Partida {
        +id_partida: AutoField
        +id_pista: ForeignKey
        +id_reserva: ForeignKey
        +estado: ForeignKey
        +cant_jugadores: IntegerField
        +ganador: ForeignKey
        +actualizar_estado()
        +crear_partidas_para_reserva()
        +actualizar_estado_partida()
        +calcular_ganador()
        +get_current_turn()
        +is_game_finished()
        +finalize_game()
        +crear_turnos()
        +iniciar_partida()
    }

    class EstadoPartida {
        +estado: CharField
        +descripcion: CharField
    }

    class Turno {
        +numero_turno: AutoField
        +id_partida: ForeignKey
        +orden: CharField
        +ultimo_turno: BooleanField
    }

    class Tirada {
        +numero_tirada: AutoField
        +pinos_deribados: IntegerField
        +orden: IntegerField
        +id_jugador: ForeignKey
        +numero_turno: ForeignKey
        +registrar_tirada()
    }

    class EstadoPista {
        +estado: CharField
        +descripcion: CharField
    }


    class EstadoPedido {
        +estado: CharField
        +descripcion: CharField
    }

    class PedidoXProducto {
        +id_pedido: ForeignKey
        +id_producto: ForeignKey
        +cantidad: IntegerField
    }

    class Producto {
        +id_producto: AutoField
        +nombre: CharField
        +descripcion: CharField
        +precio: IntegerField
    }

    

    class MisReservasView {
        <<interfaz>>

        +reserva: Reserva
        +get_reservas()
        +procesar_reserva()
    }

    class mi_reservaView {
        <<interfaz>>

        +reserva: Reserva
        +crear_partidas_para_reserva()
        +actualizar_estado_partida()
        +get_pedidos()
        +get_reservas()
        +get_partidas()
        +get_estado_reserva()
        +calc_total_a_pagar()
        +finalzar_reserva()
    }

   
    class ReservaView {
        <<interfaz>>
    
        +reserva: Reserva
        +get_form_kwargs()
        +form_valid()
        +save_reserva()
    }

    class JugadoresView {
        <<interfaz>>
    
        +jugadores: Jugador[ ]
        +get()
        +post()
        +save_partida()
        +get_detalles_pista()
    }

    class NombresJugadoresView {
        <<interfaz>>
    
        +jugadores: Jugador[ ]
        +get()
        +post()
        +isinstance()
        +get_object_or_404()
        +crear_turnos()
        +iniciar_partida()
        +crear_Jugador()
        +iniciar_partida()
    }

    class AgregarPedidoView {
        <<interfaz>>
    
        +pedido: Pedido
        +post()
        +get_object_or_404()
        +crear_pedido()
    }

    
    class VerReservasView {
        <<interfaz>>

        +reserva: Reserva
        +get_queryset()
        +get_context_data()
        +test_func()
    }

    class EditarReservaView {
        <<interfaz>>

        +reserva: Reserva
        +get_context_data()
        +form_valid()
        +test_func()
    }

    class VerPedidosView {
        <<interfaz>>

        +pedido: Pedido
        +get_queryset()
        +get_context_data()
        +test_func()
    }

    class EditarPedidoView {
        <<interfaz>>

        +pedido: Pedido
        +get_context_data()
        +form_valid()
        +test_func()
    }

    class EliminarPedidoView {
        <<interfaz>>

        +pedido: Pedido
        +get_object()
        +delete()
        +test_func()
    }

    class VerPistasView {
        <<interfaz>>

        +pista: PistaBowling
        +get_queryset()
        +test_func()
    }

    class EditarPistaView {
        <<interfaz>>

        +pista: PistaBowling
        +get_context_data()
        +form_valid()
        +test_func()
    }

    note for AgregarPedidoView "Para hacer pedidos"

    note for NombresJugadoresView "Para poner los Nombres
    de los Jugadores"

    note for JugadoresView "Para colocar la CANTIDAD de jugadores"

    note for ReservaView "Esta vista es para hacer la reserva"

    note for TablaView "La vista que muestra y genera la tabla"

    note for mi_reservaView "Para cuando ingresas a ver detalles 
    de una de TUS reservas"

    note for MisReservasView "Para visualizar las 
    reservas que hiciste"


    
    
    
    

    

    AgregarPedidoView -- Pedido
    VerPedidosView -- Pedido
    EditarPedidoView -- Pedido
    EliminarPedidoView -- Pedido
    mi_reservaView -- Pedido
    

    

    
    
    

    

    

    NombresJugadoresView -- Jugador
    NombresJugadoresView -- Turno


    JugadoresView -- Jugador


    HistorialEstado --> "*" EstadoReserva

    Pedido --> "1" EstadoPedido
    Pedido -- "1" PedidoXProducto
    PedidoXProducto  --> "*" Producto

    

    Partida --> "*" Jugador
    Partida --> "*" Turno
    Partida --> "1" EstadoPartida

    Jugador --> "*" Tirada

    Turno --> "*" Tirada

    
    TablaView -- Jugador
    TablaView -- Tirada
    TablaView -- Turno

    NombresJugadoresView -- Partida
    TablaView -- Partida
    mi_reservaView -- Partida
    Reserva --> "*" Partida

    VerPistasView -- PistaBowling
    EditarPistaView -- PistaBowling
    PistaBowling --> "1" Partida
    PistaBowling --> "1" EstadoPista
    
    
    


    Reserva --> "*" Pedido
    
    
    Reserva  --> "1" PistaBowling
    
    Reserva --> "1" HistorialEstado
    
    mi_reservaView -- Reserva
    ReservaView -- Reserva
    MisReservasView -- Reserva
    VerReservasView -- Reserva
    EditarReservaView -- Reserva

    Cliente --> "*" Reserva
    ClienteManager -- Cliente

    note for VerReservasView "Para visualizar las reservas"

    note for EditarReservaView "Para editar una reserva"

    note for VerPedidosView "Para visualizar los pedidos"

    note for EditarPedidoView "Para editar un pedido"

    note for EliminarPedidoView "Para eliminar un pedido"

    note for VerPistasView "Para visualizar las pistas"

    note for EditarPistaView "Para editar una pista"

    


